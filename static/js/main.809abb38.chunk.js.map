{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","sendMovie","Object","values","every","item","props","addMovie","setState","this","htmlFor","type","name","id","value","required","onChange","event","target","onClick","React","Component","App","moviesFromServer","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.809abb38.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React from 'react';\n\ninterface State {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n}\n\ninterface Props {\n  addMovie : (newMovie: Movie) => void\n}\n\nexport class NewMovie extends React.Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  sendMovie = () => {\n    if ((Object.values(this.state)).every(item => item !== '')) {\n      this.props.addMovie(this.state);\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    }\n  };\n\n  render() {\n    const {\n      title, description, imdbId, imdbUrl, imgUrl,\n    } = this.state;\n\n    return (\n      <>\n        <form>\n          <label htmlFor=\"title\" className=\"input\">\n            Title\n            <input\n              type=\"text\"\n              name=\"title\"\n              id=\"title\"\n              value={title}\n              required\n              onChange={(event) => {\n                this.setState({ title: event.target.value });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"description\" className=\"input\">\n            Description\n            <input\n              type=\"text\"\n              name=\"description\"\n              value={description}\n              required\n              id=\"description\"\n              onChange={(event) => {\n                this.setState({ description: event.target.value });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"imgUrl\" className=\"input\">\n            Img Url\n            <input\n              type=\"text\"\n              name=\"imgUrl\"\n              id=\"imgUrl\"\n              value={imgUrl}\n              required\n              onChange={(event) => {\n                this.setState({ imgUrl: event.target.value });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"imdbUrl\" className=\"input\">\n            IMBD Url\n            <input\n              type=\"text\"\n              name=\"imdbUrl\"\n              id=\"imdbUrl\"\n              value={imdbUrl}\n              required\n              onChange={(event) => {\n                this.setState({ imdbUrl: event.target.value });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"imdbId\" className=\"input\">\n            IMBD Id\n            <input\n              type=\"text\"\n              name=\"imdbId\"\n              id=\"imdbId\"\n              value={imdbId}\n              required\n              onChange={(event) => {\n                this.setState({ imdbId: event.target.value });\n              }}\n            />\n          </label>\n\n          <button\n            type=\"submit\"\n            onClick={() => {\n              this.sendMovie();\n            }}\n          >\n            Add movie\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newMovie: Movie) => {\n    this.setState((state) => ({ movies: [...state.movies, newMovie] }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <h1 className=\"title\">Add movie</h1>\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}